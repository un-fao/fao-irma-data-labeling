print('==============================\n\guide\n\n==============================')
import streamlit as st


if 'labeler' in st.session_state.roles:
    with st.expander('Labeling User Interface'):
        st.image('./images/labeler.png')
        st.subheader('Overview')
        st.write('''
            The labeling application is used to label locations as either rainfed or irrigated for specific dates.\n
            The system accepts dates between :green[2018-01-01 to 2024-12-31].\n
                 
            Labels are initially saved as draft.  Once reviewed, they are then consolidated into the main dataset.
                 
            The application initially proposes a random date.  Other dates can be manually selected from the calendar or a new random date can be generated by clicking the :green[:material/refresh: New Date] button.\n
            A True-Color image is displayed for the label date with available satellite imagery.  This layer and others can be toggled on and off in the upper right corner of the map.\n
            A recent high-resolution image layer is also available to show more detail, but should not used for assessing the location's status as either rainfed or irrigated.\n
                 
            Images with high cloud cover may be displayed, preventing visual assessment of the location's status.  In this case either click the New Date button or select a date using the calendar.\n
            If the image shown for the desired date has cloud cover that obscures the location selected for labeling, use the layer controls to toggle off the true-color image.\n
            ''')
        st.image('./images/clouds.png')


        st.subheader('Creating Labels')
        st.write('''
            Use the map to navigate to a location for labeling:
            - by dragging the map or zooming in.\n
            - using the search bar :green[:material/search:] on the top left of the map to find a location by name or address.\n
            Select the appropriate label type (rainfed or irrigated).\n
            Click on the map to create a label for that location.  The label is added to the basket.\n
            Continue adding labels as needed.\n
            ''')

        st.subheader('Editing Labels')
        st.write('''
            To review or modify a label, click on the cell to the left of the label in the basket.\n
            The label is highlighted in the map for the label date, and displayed in the label details table.\n
            Modify the label as needed in the label details table.\n
            Assign `unknown` to remove the label from the data (it will remain in the basket) or select the row and click the trash icon :green[:material/delete:] above the table to delete the label.\n
            
            Adding labels for the same edit location:\n
            - Labels can be added for the same location for different dates by clicking the :green[:material/add:] button in the label edit table.  On the new row, select the classification and date.\n
            - Once all changes or additions are made, click the `Save` button to save the changes.\n
            ''')

        st.subheader('Saving Labels')
        st.write('''
            Save the basket for every 10-20 labels to avoid losing work in case of connection issues.\n
            All labels in the basket are saved for review.\n
        ''')

        st.subheader('Example: Label Correction')
        st.image('./images/corrections.png')


with st.expander('Frequently Asked Questions'):
    st.subheader('1) I want to label a specific location for several dates.  How do I do this?')
    st.write('''
       - Select the date in the calendar at the top of the page.\n
       - Use the map to navigate to the location.\n
       - Select the label type (rainfed or irrigated).\n
       - Click on the map to create a label for that location.\n
       - The label is added to the basket.\n
       - Select the label row in the basket to edit.\n
       - Click the :green[:material/add:] button in the edit table to add a new row and select the date and label type for the new row.\n
       - Continue adding labels as needed.\n
       - Once all changes or additions are made, click the `Save` button to save the changes.\n
             ''')

    st.subheader('2) There are several labels for the same location for different dates.  I only see one marker on the map.  How do I see the other markers?')
    st.write('''
       - By default, only the marker for the most recently created label is shown on the map.\n
       - To see specific dates, select the row in the basket.  The location is highlighted on the map and the true-color image for the selected date is displayed.  The marker color shown on the map may not indicate the label which is shown in the edit table.\n
    ''')

    st.subheader("3) Why do I not see a true-color satellite image for the selected date?")
    st.write('''
       - Every effort is made to present the true-color satellite image for the location and date selected.  In some cases, the image may not be available due to manually entering the date and label for a location in the edit table.\n
       - Manually adding labels in the edit table depends on the user's knowledge of the irrigation status for a location and date independent of the satellite imagery.\n
       - If a reviewer is unsure, ask the labeler for more information or assign the label as `unknown`.\n
    ''')

    st.subheader('4) Which remote sensing data providers and datasets are used?')
    st.write('''
        - ESRI World Imagery
        - ESA WorldCover 10m v100
        - CHIRPS Daily: Climate Hazards Center InfraRed Precipitation With Station Data
        - Sentinel 2
        - Google Earth Engine
        - OpenStreetMap
    ''')


if 'reviewer' in st.session_state.roles:
    with st.expander('Reviewing User Interface'):
        st.write('''
            The reviewer user interface is used to review and edit labels if needed.
                 
            Set the label to `unknown` classification to remove the label from the data.
        ''')
        st.image('./images/reviewer.png')



if 'admin' in st.session_state.roles:
    with st.expander('Admin User Interface'):
        st.write('''
            The admin user interface is used to manage manage data consolidation.
        ''')
        st.image('./images/admin.png')
